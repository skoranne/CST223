#+TITLE:     Variables
#+AUTHOR:    Sandeep Koranne
#+EMAIL:     koranne.sandeep@oit.edu
#+DATE:      \today


#+startup: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [bigger]
#+latex_class_options: [handout]

#+LATEX_HEADER: \usepackage{listings} \lstset{  language={C++},  basicstyle=\ttfamily\tiny}
#+OPTIONS: toc:nil

#+BEAMER_FRAME_LEVEL: 2

#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)
#+latex_header: \mode<beamer>{\usetheme{Madrid}}

* Recursive Descent Parsing

* LALR(1) Parsing

* Chapter 5

* Variables
- Names
- Keyword
- Type
- Address
- Value
- Constants

* Variable Lifetime Analysis

* Scope
- Lexical scope
- Dynamic scope

* Data Types
- Integral
- Floating
- String (representation)
- User defined types 
- User defined ordinal types
- Enumeration
- Arrays
- Sliced Arrays
- Records and Unions
- Pointers

* Homework Number 3 from Chapter 5
- Define /static binding/ and /dynamic binding/ (Q9)
- What is the purpose of /let/ constructs in functional language (Q 19)
- What are the advantages of /named constants/ (Q23)
- Answer Q10 of the problem set 
- Chapter 6 Q31 and Problem 12
- Define /union/, /free union/ and /discriminated union/
- Analyze and compare C's malloc() with C++ new()

* Lab 2
- Write Common Lisp function to Print Hello, World, function to add 2 numbers together and return the sum, Factorial and Fibonacci
- Programming Ex. 2: Write a Common Lisp program that clearly shows the difference between static and dynamic scoping
- Write Common Lisp code for Towers of Hanoi for 4 disks
- Write the Collatz count function. Test it on numbers from 1 to 20
- Collatz function is defined as C(n) = n/2 for n even, 3n+1 for n odd
- The Collatz Count function counts the number of times Collatz is called till we get to 1
- en.wikipedia.org/wiki/Collatz_conjecture
- Write Common Lisp function which uses push, mapcar, lambda
